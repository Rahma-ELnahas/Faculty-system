// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proj.Models;

#nullable disable

namespace Proj.Migrations
{
    [DbContext(typeof(ProjContext))]
    partial class ProjContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proj.Models.sub", b =>
                {
                    b.Property<int>("accId")
                        .HasColumnType("int");

                    b.Property<int>("courseId")
                        .HasColumnType("int");

                    b.HasKey("accId", "courseId");

                    b.HasIndex("courseId");

                    b.ToTable("Subs");
                });

            modelBuilder.Entity("Proj.Models.subject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("docId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.HasIndex("docId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Proj.Models.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("password")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int?>("phone")
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Proj.Models.sub", b =>
                {
                    b.HasOne("Proj.Models.user", "account")
                        .WithMany("Subs")
                        .HasForeignKey("accId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proj.Models.subject", "course")
                        .WithMany("Subs")
                        .HasForeignKey("courseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("course");
                });

            modelBuilder.Entity("Proj.Models.subject", b =>
                {
                    b.HasOne("Proj.Models.user", "doc")
                        .WithMany()
                        .HasForeignKey("docId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doc");
                });

            modelBuilder.Entity("Proj.Models.subject", b =>
                {
                    b.Navigation("Subs");
                });

            modelBuilder.Entity("Proj.Models.user", b =>
                {
                    b.Navigation("Subs");
                });
#pragma warning restore 612, 618
        }
    }
}
